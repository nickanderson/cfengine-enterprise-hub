bundle agent inventory_top_tables_by_size
# @brief Inventory the tables using the most space
# @inventory Device Database Table Size $(table_names) - Size in bytes of each table
{
    vars:
    cfengine.enterprise_edition.policy_server::
        "query_output" string => "$(sys.statedir)/cfdb-table-size.json";
        "psql_table_size_query" string => `SELECT json_agg(t) from( SELECT nspname || '.' || relname AS "relation",
        pg_total_relation_size(C.oid) AS "total_size"
        FROM pg_class C
        LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace)
        WHERE nspname NOT IN ('pg_catalog', 'information_schema')
        AND C.relkind <> 'i'
        ORDER BY pg_total_relation_size(C.oid) DESC
        Limit 20) t;`;

        "psql_cmd" string => "/var/cfengine/bin/psql";
        "psql_cmd_opts" slist => { "--no-align", "--tuples-only", "cfdb", "-c", `"$(psql_table_size_query)"`, "> $(query_output)" };

        "query_result" data => readjson( "$(query_output)" ), if => fileexists( "$(query_output)" );
        "table_names" slist => getindices( query_result );

        "table[$(query_result[$(table_names)][relation])]"
          string => "$(query_result[$(table_names)][total_size])",
          unless => regcmp( "public\.__promiselog_.*", "$(query_result[$(table_names)][relation])"),
          meta => { "inventory", "attribute_name=Device Database Table Size $(query_result[$(table_names)][relation])" };

        "promise_log[$(query_result[$(table_names)][relation])]"
          string => "$(query_result[$(table_names)][total_size])",
          if => regcmp( "public\.__promiselog_.*", "$(query_result[$(table_names)][relation])");

        "table[public.__promiselog]"
          string => format( "%d", sum( getvalues( promise_log ) ) ),
          meta => { "inventory", "attribute_name=Device Database Table Size public.__promiselog" };

    cfengine.enterprise_edition.policy_server.(DEBUG|DEBUG_inventory_databse_table_sizes|verbose_mode)::
        "ti" slist => getindices( table );

  commands:
    cfengine.enterprise_edition.policy_server::
      "$(psql_cmd)"
        arglist => { @(psql_cmd_opts) },
        contain => in_shell;

  reports:
    cfengine.enterprise_edition.policy_server.(DEBUG|DEBUG_inventory_databse_table_sizes|verbose_mode)::
      "$(ti) == $(table[$(ti)])";

}
bundle agent __main__
{
  methods:
      "inventory_top_tables_by_size";
}
